;; Auto-generated. Do not edit!


(when (boundp 'hector_uav_msgs::LandingGoal)
  (if (not (find-package "HECTOR_UAV_MSGS"))
    (make-package "HECTOR_UAV_MSGS"))
  (shadow 'LandingGoal (find-package "HECTOR_UAV_MSGS")))
(unless (find-package "HECTOR_UAV_MSGS::LANDINGGOAL")
  (make-package "HECTOR_UAV_MSGS::LANDINGGOAL"))

(in-package "ROS")
;;//! \htmlinclude LandingGoal.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass hector_uav_msgs::LandingGoal
  :super ros::object
  :slots (_landing_zone ))

(defmethod hector_uav_msgs::LandingGoal
  (:init
   (&key
    ((:landing_zone __landing_zone) (instance geometry_msgs::PoseStamped :init))
    )
   (send-super :init)
   (setq _landing_zone __landing_zone)
   self)
  (:landing_zone
   (&rest __landing_zone)
   (if (keywordp (car __landing_zone))
       (send* _landing_zone __landing_zone)
     (progn
       (if __landing_zone (setq _landing_zone (car __landing_zone)))
       _landing_zone)))
  (:serialization-length
   ()
   (+
    ;; geometry_msgs/PoseStamped _landing_zone
    (send _landing_zone :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; geometry_msgs/PoseStamped _landing_zone
       (send _landing_zone :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; geometry_msgs/PoseStamped _landing_zone
     (send _landing_zone :deserialize buf ptr-) (incf ptr- (send _landing_zone :serialization-length))
   ;;
   self)
  )

(setf (get hector_uav_msgs::LandingGoal :md5sum-) "9a975e3289dd0b8ab52f7f62f182cd2a")
(setf (get hector_uav_msgs::LandingGoal :datatype-) "hector_uav_msgs/LandingGoal")
(setf (get hector_uav_msgs::LandingGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Landing pose, pose.z is ignored.
# If no stamp is provided, landing_zone is assumed to be empty and
# robot will land directly below
geometry_msgs/PoseStamped landing_zone

================================================================================
MSG: geometry_msgs/PoseStamped
# A Pose with reference coordinate frame and timestamp
Header header
Pose pose

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
# 0: no frame
# 1: global frame
string frame_id

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

")



(provide :hector_uav_msgs/LandingGoal "9a975e3289dd0b8ab52f7f62f182cd2a")


